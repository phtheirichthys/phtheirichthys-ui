name: CI

on:
  push:
    branches: [ '*' ]
    tags:
      - v*

jobs:
  buildx:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm set '//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}'
    - run: npm set @phtheirichthys:registry=https://npm.pkg.github.com
    - run: npm install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.PHTHEIRICHTHYS_REGISTRY }}
    - run: npm run build

    - name: Prepare
      id: prepare
      run: |
        DOCKER_IMAGE=phtheirichthys/phtheirichthys
        DOCKER_PLATFORMS=linux/amd64,linux/arm64
        VERSION="ui-${GITHUB_SHA::8}-$(date +%s)"

        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION="ui-${GITHUB_REF#refs/tags/v}"
        fi

        TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
        fi

        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
          --build-arg VERSION=${VERSION} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=${GITHUB_SHA::8} \
          ${TAGS} --file ./Dockerfile ./

    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3.3.1

    - name: Docker Buildx (build)
      run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

    - name: Login to DockerHub
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Buildx (push)
      if: success() && github.event_name != 'pull_request'
      run: |
        docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

    - name: Inspect image
      if: always() && github.event_name != 'pull_request'
      run: |
        docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}